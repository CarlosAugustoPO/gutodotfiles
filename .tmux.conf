#  _____
# |_    L __ ___  _   ___  __
#   | || '_ ` _ \| | | \ \/ /
#  _| || | | | | | |_| |>  <
# (_|_||_| |_| |_|\__,_/_/\_\
#    ____             __
#   / ___|___  _ __  / _|
#  | |   / _ \| '_ \| |_
#  | |__| (_) | | | |  _|
# (_\____\___/|_| |_|_|

# ==========================
# ===  General settings  ===
# ==========================

set -g default-terminal "screen-256color"
set -g history-limit 20000
set -g buffer-limit 20
set -g escape-time 0
set -g renumber-windows on
set -g set-titles on
set -g set-titles-string "Tmux - #W (window #I)"
set -g repeat-time 300 #time to accept keys in same command
set -g display-time 2000 #time to disappear system messages
set -g mode-keys vi # enable vi keys in buffer mode
set -g default-command "${SHELL}"
set -g mouse on
set -g base-index 1
set -g pane-base-index 1
setw -g aggressive-resize on

# =======================
# === Color Variables ===
# =======================

color_clock="colour78"
color_pane_inactive_bg="colour236"
color_pane_inactive_text="colour249"
color_pane_title_text="colour16"
color_pane_title_bg="colour78"
color_host="colour69"
color_tab_active_text="colour46"
color_tab_inactive_text="colour247"
color_session_text="colour69"
color_bg="black"
color_spam_box="colour54"
color_spam_text="colour228"
color_pane_bg="black"
color_status_bg="black"

# =============
# === Hooks ===
# =============

## After new window hook
set-hook -g after-new-window "select-pane -P 'bg=$color_pane_bg'"
set-hook -ga after-new-window "command-prompt -I '#{window_name}' 'rename-window "%%"'"
set-hook -ga after-new-window "pipe-pane -o 'cat >>~/Documents/mylogs/teste.log'"

## After new session hook
set-hook -g after-new-session "select-pane -P 'bg=$color_pane_bg'"
set-hook -ga after-new-session "pipe-pane -o 'cat >>~/Documents/mylogs/teste.log'"

## After split hook
set-hook -g after-split-window "select-pane -P 'bg=$color_pane_bg'"
set-hook -ga after-split-window "pipe-pane -o 'cat >>~/Documents/mylogs/teste.log'"

# ==================
# === Status bar ===
# ==================

set -g status-interval 3
set -g status 4
set -g status-justify left # [ left | centre | right ]
set -g status-bg "$color_status_bg"

# =====================
# === 4ª Status Bar ===
# ====  Bottom bar ====
# =====================

# =========================
# === 4ª's Left Session ===
# =========================

set -g status-format[3] "\
#[align=left]#[fg=$color_tab_inactive_text]\
 NOW:\
#[fg=$color_session_text]\
#(~/.tmux/routine-check/check-task-now.sh)\
#[fg=$color_tab_inactive_text]\
NEXT:\
#[fg=$color_tab_active_text]\
[#(~/.tmux/routine-check/check-task-left.sh)]\
#[fg=$color_session_text]\
#(~/.tmux/routine-check/check-task-next.sh)\
#[bg=$color_bg]"

# ==========================
# === 4ª's Right Session ===
# ==========================

set -ga status-format[3] "\
#[align=right]#[fg=$color_tab_inactive_text]\
#(~/.tmux/season-check/season-check.sh)\
#[fg=$color_tab_active_text]\
[+#(~/.tmux/season-check/days_for_next_season.sh)d]\
#[fg=$color_host]\
 %-d/%b\
#[fg=$color_spam_text]\
[%a] \
#[fg=$color_tab_inactive_text]\
#(~/.tmux/weather-check/sky-check.sh)\
#[fg=$color_spam_text]\
#(~/.tmux/weather-check/weather-check.sh)°C \
#[fg=$color_tab_inactive_text]\
#(~/.tmux/moon-check/moon-check.sh) \
#[fg=$color_host]\
%H:%M  "


# =====================
# === 3ª Status Bar ===
# =====================

# =========================
# === 3ª's Left Session ===
# =========================

set -g status-format[2] "\
#[align=left]#[fg=$color_tab_inactive_text]\
 CPU:\
#[fg=$color_tab_active_text]\
#(~/.tmux/cpu-check/cpu-usage-check.sh )\
#[fg=$color_tab_inactive_text]\
 T:\
#[fg=$color_tab_active_text]\
#(~/.tmux/cpu-check/cpu-temp-check.sh)°\
#[fg=$color_tab_inactive_text]\
#[fg=$color_tab_inactive_text]\
 LD:\
#[fg=$color_tab_active_text]\
#(~/.tmux/cpu-check/load-check.sh)\
#[fg=$color_tab_inactive_text]\
 |\
 MEM:\
#[fg=$color_tab_active_text]\
#(~/.tmux/mem-check/mem-usage-check.sh )\
#[fg=$color_tab_inactive_text]\
[#(~/.tmux/mem-check/mem-total-check.sh )] \
#[fg=$color_tab_inactive_text]|\
 HD:\
#[fg=$color_tab_active_text]\
#(~/.tmux/hd-check/hd-usageperc-check.sh )\
#[fg=$color_tab_inactive_text]\
[#(~/.tmux/hd-check/hd-totalsize-check.sh )] \
#[fg=$color_tab_inactive_text]"

# ==========================
# === 3ª's Right Session ===
# ==========================

set -ga status-format[2] "\
#[align=right]#[fg=$color_tab_active_text]\
 ⇪ \
#[fg=$color_host]\
#(~/.tmux/cpu-check/uptime-check.sh; sleep 77 ) \
#[fg=$color_tab_active_text]\
⚡\
#[fg=$color_host]\
#(cat /sys/class/power_supply/BAT0/capacity; sleep 71)%  "

# =====================
# === 2ª Status Bar ===
# =====================

# =========================
# === 2ª's Left Session ===
# =========================

set -g status-format[1] "\
#[align=left]#[fg=$color_tab_inactive_text]\
 INT:\
#[fg=$color_session_text]\
#(~/.tmux/ip-check/iprede-check.sh)\
#[fg=$color_tab_inactive_text]\
 EXT:\
#[fg=$color_session_text]\
#(~/.tmux/ip-check/ipexterno-check.sh)\
#[fg=$color_tab_inactive_text]\
 DKR:\
#[fg=$color_session_text]\
#(~/.tmux/ip-check/ipdocker-check.sh)\
#[bg=$color_bg]"

# =========================
# === 2ª's Right Session ===
# =========================

set -ga status-format[1] "#[align=right]\
#[fg=$color_tab_inactive_text]\
#(whoami; sleep 66)#[fg=$color_host]@#h  "

# =====================
# === 1ª Status Bar ===
# ====== Top bar ======
# =====================

# =========================
# === 1ª's Left Session ===
# =========================

# session field
set -g status-left "#[fg=$color_session_text] #S(#{session_windows}w) "
set -g status-left-length 50

# active window
set -g window-status-current-format \
"#[bg=$color_bg fg=$color_tab_active_text]\
[\
#[bg=$color_bg fg=$color_tab_active_text]\
#I:#W(#{window_panes}p)#F\
#[bg=$color_bg fg=$color_tab_active_text]\
]"

# inactive window
set -g window-status-separator ""
set -g window-status-format "\
#[fg=$color_tab_inactive_text]\
 #I:#W(#{window_panes}p)#F "

# ==========================
# === 1ª's Right Session ===
# ==========================

# alert icons and date
set -g status-right-length 75
set -g status-right "#(\
if [ -e $(find /sys/class/leds -name "*capslock"|head -1)/brightness ]\
    && [ $(cat $(find /sys/class/leds -name\
      "*capslock"|head -1)/brightness) != 0 ]; then\
  printf ' #[fg=$color_spam_text bg=$color_spam_box]\
 Caps On \
#[bg=$color_bg fg=$color_host]';\
else\
 printf '';\
fi;\
)#(\
if [ -e $(find /sys/class/leds -name "*numlock"|head -1)/brightness ]\
    && [ $(cat $(find /sys/class/leds -name\
      "*numlock"|head -1)/brightness) != 0 ]; then\
  printf ' #[fg=$color_spam_text bg=$color_spam_box]\
 Num On \
#[bg=$color_bg fg=$color_host]';\
else\
 printf '';\
fi;\
)#{?#{==:#{selection_present},1},\
 #[bg=$color_spam_box fg=$color_spam_text]\
 Copy \
#[bg=$color_bg],}\
#{?#{==:#{selection_present},0},\
 #[bg=$color_spam_box fg=$color_spam_text]\
 Buffer \
#[bg=$color_bg],}\
#{?window_zoomed_flag,\
 #[bg=$color_spam_box fg=$color_spam_text]\
 Zoom \
#[bg=$color_bg],}\
#{?client_prefix,\
 #[fg=$color_spam_text bg=$color_spam_box]\
 ^B \
#[bg=$color_bg fg=$color_tab_inactive_text],}"

set -ga status-format[0] "\
#[align=right]#[fg=$color_tab_inactive_text]\
 TODO[\
#[fg=$color_tab_active_text]\
#(~/.tmux/todo-check/todo-left.sh)\
#[fg=$color_tab_inactive_text]\
]:\
#[fg=$color_session_text]\
#(~/.tmux/todo-check/todo-check.sh)  \
#[bg=$color_bg]"

# =====================
# === Pane Settings ===
# =====================

set -g pane-border-status 'top'
set -g pane-border-format \
"#{?#{==:#{selection_present},1},\
#[bg=$color_spam_box fg=$color_spam_text]\
 Copy \
#[bg=$color_pane_title_bg fg=$color_pane_title_text],}\
#{?#{==:#{selection_present},0}, \
#[bg=$color_spam_box fg=$color_spam_text]\
 Buffer \
#[bg=$color_pane_title_bg fg=$color_pane_title_text],}\
#{?window_zoomed_flag, \
#[bg=$color_spam_box fg=$color_spam_text]\
 Zoom \
#[bg=$color_pane_title_bg fg=$color_pane_title_text],}\
#{?pane_active, \
#[fg=$color_pane_title_text]\
#[bg=$color_pane_title_bg]\
[#{pane_current_command}]\
[#{b:pane_current_path}]\
[#( ls -dl #{pane_current_path} | cut -c 1-10 )]\
[#( ~/.tmux/permission-check/octal-permission-check.sh #{pane_current_path} )],\
#{?pane_synchronized, \
#[fg=$color_pane_title_text],\
 #[fg=$color_pane_inactive_text]\
}\
#[bg=$color_pane_inactive_bg]\
[#{pane_current_command}]\
[#{b:pane_current_path}]\
[#( ls -dl #{pane_current_path} | cut -c 1-10 )]\
[#( ~/.tmux/permission-check/octal-permission-check.sh #{pane_current_path} )]\
}\
#{?pane_pipe,\
[LG],\
[NL]\
#[fg=$color_pane_title_text]}\
#{?#{==:#{search_present},1},\
#[align=right]\
#[bg=$color_spam_box fg=$color_spam_text]\
 Search for: #{search_match} \
#[bg=$color_pane_title_bg fg=$color_pane_title_text],}\
"

# active pane
set -g pane-active-border-style "\
bg=$color_pane_title_bg,\
fg=$color_pane_title_bg"

# inactive pane
set -g pane-border-style "\
bg=$color_pane_inactive_bg,\
fg=$color_pane_inactive_bg"

# ====================
# === Modes styles ===
# ====================

set -g copy-mode-match-style "\
bg=$color_pane_inactive_bg,\
fg=$color_pane_inactive_text"

set -g copy-mode-current-match-style "\
bg=$color_spam_box,\
fg=$color_spam_text"

set -g clock-mode-colour $color_clock
set -g mode-style \
  "bg=$color_spam_box,fg=$color_spam_text"

# messages
set -g message-style \
  "bg=$color_spam_box,fg=$color_spam_text"

# ======================
# ===  Key bindings  ===
# ======================

# Synchronize Panes
bind -T root F10 \
  set synchronize-panes on \;\
  set key-table off \;\
  set pane-border-style \
    "bg=$color_pane_title_bg fg=$color_pane_title_bg" \;\
  display-message "synchronize-pane is ON" \;\

bind -T off F10 \
  set synchronize-panes off \;\
  set -u key-table \;\
  set -u pane-border-style \;\
  display-message "synchronize-pane is OFF" \;\
  refresh-client -S

#Send with Enter
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel \
  "xclip -i -f -selection primary |\
  xclip -i -selection clipboard" "Copied " \;\
  display-message "Copy on buffer and clipboard"

#Send after copy mode with D to clipboard
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \
  "xclip -i -f -selection primary |\
  xclip -i -selection clipboard" \;\
  display-message "Copy on buffer and clipboard"

# Link window
bind L command-prompt -p \
  "Link window from (session:window): " "\
  link-window -s %% -a"

# Toggle monitor alert on
bind F4 setw -g monitor-activity \; display-message \
'Monitor window activity [#{?monitor-activity,ON,OFF}]'

# Alert if monitor has silence for XX seconds
bind F5 if -F '#{monitor-silence}' \
  'setw monitor-silence 0 ;\
  display-message "Monitor window silence [OFF]"' \
  'command-prompt -p "Monitor silence: interval (s)"\
  "setw monitor-silence %%"'

# Show text alert that has activity on I window
set -g visual-activity on

# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
  "run-shell 'yes | head -n #{session_windows} |\
  xargs -I {} -n 1 tmux movew -t %%'"

# Bind kill active session
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Reload tmux conf
bind C-r source-file ~/.tmux.conf \;\
 display " Configuration reloaded"

# Edit configuration and reload
bind C-e new-window -n \
'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf &&\
tmux source ~/.tmux.conf &&\
tmux display \"Configuration reloaded\"'"

# Hide status bar
bind C-j if -F '#{s/off//:status}' \
'set status off' 'set status 4'

# new window and retain current word directory
bind c new-window -c "#{pane_current_path}" -n "new-window"

bind ! break-pane -n "new-window"

# Split panes and retain current work directory
bind % split-window -h -c "#{pane_current_path}"
bind \" split-window -v -c '#{pane_current_path}'

# new window to view history
bind v new-window -n "logs-view" -c "~/Documents/mylogs"

## Join windows: <prefix> s, <prefix> j
bind-key 9 command-prompt -p \
  "join pane from:"  "join-pane -s '%%'"
bind-key 8 command-prompt -p \
  "send pane to:"  "join-pane -t '%%'"

# Search in start of last output
bind v new-window -n "logs-view" -c "~/Documents/mylogs/" \;\
 send-keys "tmux pipe-pane" \;\
 send-keys Enter \;\
 send-keys c \;\
 send-keys Enter;

# Search in start of last output
bind C-g copy-mode \;\
 send-keys -X search-backward '----\$' \;\
 send-keys n \;\
 display " Search for last output"
# n for previous one and shift n for next

# Set mouse on
bind-key m set-option -g mouse \;\
  display " Mouse: #{?mouse,ON,OFF}"

# Set vim keys to navigate between panes
unbind h
unbind j
unbind k
unbind l

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Tab to change between last active windows
bind -r Tab last-window #(antigo prefix+l)

# ==============================================
# ===   Nesting local and remote sessions    ===
# ==============================================

# Pass control to sub tmux.
 #!cuidado, não pode haver espaço
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "bg=$color_pane_inactive_bg" \;\
  set -g window-status-format " #I:#W " \;\
  set window-status-current-format \
    "#[bg=$color_pane_inactive_text,\
    fg=$color_pane_inactive_bg] #I:#W " \;\
  setw -g window-status-separator "|" \;\
  display " #h Silenced by F12" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u -g window-status-format \;\
  set -u window-status-current-format \;\
  set -u -g window-status-separator \;\
  display " #h Enabled by F12" \;\
  refresh-client -S
